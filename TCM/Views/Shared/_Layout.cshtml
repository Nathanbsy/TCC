@using System.Security.Claims;
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Eat Now</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/TCM.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/formularios.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/tables.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/nav.css" asp-append-version="true" />
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
</head>
<body>
    <header>
        <div class="mobileNav">
            <ul>
                
                <li class="lista @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")">
                    <a asp-controller="Home" asp-action="Index">
                        <div class="icon">
                            <ion-icon name="home-outline"></ion-icon>
                        </div>
                        <div class="text">Home</div>
                    </a>
                </li>

                @if (User.Identity.Name == null)
                {
                    <li class="lista @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["action"]?.ToString() == "Login" ? "active" : "")">
                        <a asp-controller="Home" asp-action="Login">
                            <div class="icon">
                                <ion-icon name="person-outline"></ion-icon>
                            </div>
                            <div class="text">Login</div>
                        </a>
                    </li>
                    <li class="lista @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["action"]?.ToString() == "CadastrarUsuario" ? "active" : "")">
                        <a asp-controller="Home" asp-action="CadastrarUsuario">
                            <div class="icon">
                                <ion-icon name="person-add-outline"></ion-icon>
                            </div>
                            <div class="text">Cadastro</div>
                        </a>
                    </li>
                }

                <li class="lista @(ViewContext.RouteData.Values["controller"]?.ToString() == "Carrinho" ? "active" : "")">
                    <a asp-controller="Carrinho" asp-action="Index">
                        <div class="icon">
                            <ion-icon name="cart-outline"></ion-icon>
                        </div>
                        <div class="text">Carrinho</div>
                    </a>
                </li>

                @if (User.Identity.Name != null)
                {
                    <li class="lista @(ViewContext.RouteData.Values["controller"]?.ToString() == "Conta" && ViewContext.RouteData.Values["action"]?.ToString() == "MeusPedidos" ? "active" : "")">
                        <a asp-controller="Conta" asp-action="MeusPedidos">
                            <div class="icon">
                                <ion-icon name="receipt-outline"></ion-icon>
                            </div>
                            <div class="text">Histórico</div>
                        </a>
                    </li>
                }

                @if (User.IsInRole("Administrador"))
                {
                    <li class="lista @(ViewContext.RouteData.Values["controller"]?.ToString() == "Conta" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")">
                        <a asp-controller="Conta" asp-action="Index">
                            <div class="icon">
                                <ion-icon name="create-outline"></ion-icon>
                            </div>
                            <div class="text">Admin</div>
                        </a>
                    </li>
                }

                @if (User.IsInRole("Cliente"))
                {
                    <li class="lista @(ViewContext.RouteData.Values["controller"]?.ToString() == "Conta" && ViewContext.RouteData.Values["action"]?.ToString() == "MinhaConta" ? "active" : "")">
                        <a asp-controller="Conta" asp-action="MinhaConta">
                            <div class="icon">
                                <ion-icon name="person-outline"></ion-icon>
                            </div>
                            <div class="text">Minha Conta</div>
                        </a>
                    </li>
                }

                @if (User.IsInRole("Fornecedor"))
                {
                    <li class="lista @(ViewContext.RouteData.Values["controller"]?.ToString() == "Conta" && ViewContext.RouteData.Values["action"]?.ToString() == "PainelFornecedor" ? "active" : "")">
                        <a asp-controller="Conta" asp-action="PainelFornecedor">
                            <div class="icon">
                                <ion-icon name="create-outline"></ion-icon>
                            </div>
                            <div class="text">Fornecedor</div>
                        </a>
                    </li>
                }

                @if (User.Identity.Name != null)
                {
                    <li class="lista @(ViewContext.RouteData.Values["controller"]?.ToString() == "Conta" && ViewContext.RouteData.Values["action"]?.ToString() == "MinhaConta" ? "active" : "")">
                        <a asp-controller="Conta" asp-action="MinhaConta">
                            <div class="icon">
                                <span class="imgBx">
                                    <ion-icon name="person-outline"></ion-icon>
                                </span>
                            </div>
                            <div class="text">@User.Identity.Name</div>
                        </a>
                    </li>
                }

                <li class="lista @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["action"]?.ToString() == "Logout" ? "active" : "")">
                    <a asp-controller="Home" asp-action="Logout">
                        <div class="icon">
                            <ion-icon name="settings-outline"></ion-icon>
                        </div>
                        <div class="text">Logout</div>
                    </a>
                </li>
                <div class="bolinha"></div>
            </ul>
            
        </div>

    </header>

    <div class="container">
        <main role="main">
            @RenderBody()
        </main>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Seleciona todos os links dentro do menu
            const links = document.querySelectorAll(".mobileNav a");

            links.forEach(link => {
                link.addEventListener("click", function (event) {
                    event.preventDefault(); // Impede a navegação imediata

                    const destino = this.href; // Captura o destino do link

                    // Aguarda 2 segundos antes de redirecionar
                    setTimeout(() => {
                        window.location.href = destino;
                    }, 500);
                });
            });
        });
    </script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/script.js" asp-append-version="true"></script>
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

@*
    
*@
